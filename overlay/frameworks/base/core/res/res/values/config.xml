<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2016 The Andeoid Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Flag indicating whether round icons should be parsed from the application manifest. -->
    <bool name="config_useRoundIcon">true</bool>

    <!-- Specifies the path that is used by AdaptiveIconDrawable class to crop launcher icons. -->
    <string name="config_icon_mask" translatable="false">"M50 0A50 50,0,1,1,50 100A50 50,0,1,1,50 0"</string>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
    <bool name="config_swipe_up_gesture_setting_available">true</bool>

    <!-- Controls whether system buttons use all caps for text -->
    <bool name="config_buttonTextAllCaps">false</bool>

    <!-- Amount of time in ms the user needs to press the relevant keys to trigger the
         screenshot chord -->
    <integer name="config_screenshotChordKeyTimeout">0</integer>

    <!-- Name of a font family to use for headlines. If empty, falls back to platform default -->
    <string name="config_headlineFontFamily">google-sans</string>

    <!-- Name of the font family used for system surfaces where the font should use medium weight -->
    <string name="config_headlineFontFamilyMedium">google-sans-medium</string>

    <!-- Allows setting custom fontFeatureSettings on specific text. -->
    <string name="config_headlineFontFeatureSettings">ss03</string>

    <string-array name="config_locationProviderPackageNames" translatable="false">
    <!-- The Google provider -->
    <item>com.google.android.gms</item>

    <!-- The standard AOSP fused location provider -->
    <item>com.android.location.fused</item>
    </string-array>

    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- Disable stock OTA components if installed -->
    <string-array name="config_disabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateActivity</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateActivity</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$ActiveReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$SecretCodeReceiver</item>
    </string-array>

    <!-- Force enabling of some services that could have been previously disabled -->
    <string-array name="config_forceEnabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService</item>
    </string-array>

    <!-- The component name, flattened to a string, for the default autofill service
         to  enabled for an user. This service must be trusted, as it can be activated
         without explicit consent of the user. If no autofill service with the
          specified name exists on the device, autofill will be disabled by default. -->

    <string name="config_defaultAutofillService" translatable="false">com.google.android.gms/.autofill.service.AutofillService</string>
    <string name="config_defaultAppPredictionService">com.google.android.as/com.google.android.apps.miphone.aiai.app.AiAiPredictionService</string>
    <string name="config_defaultContentSuggestionsService">com.google.android.as/com.google.android.apps.miphone.aiai.app.AiAiContentSuggestionsService</string>
    <string name="config_defaultSystemCaptionsManagerService">com.google.android.as/com.google.android.apps.miphone.aiai.captions.SystemCaptionsManagerService</string>
    <string name="config_defaultSystemCaptionsService">com.google.android.as/com.google.android.apps.miphone.aiai.captions.CaptionsService</string>
    <string name="config_defaultTextClassifierPackage">com.google.android.as</string>
    <string name="config_defaultListenerAccessPackages">com.android.launcher3:com.google.android.as</string>
</resources>
